[tool.poetry]
name = "metis"
version = "1.28.2"
description = "Card enrolment bridge API. Handles enrolment and unenrolment of payment cards"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "metis"}]

[[tool.poetry.source]]
name = "bink-pypi"
url = "https://pypi.gb.bink.com/simple"
priority = "explicit"

[tool.poetry.dependencies]
python = "^3.11"
arrow = "^1.2.3"
celery = "^5.2.7"
lxml = "^4.9.2"
pika = "^1.3.2"
redis = "^4.5.5"
requests = "^2.30.0"
voluptuous = "^0.13.1"
flask = "^2.3.2"
flask-restful = "^0.3.9"
flask-script = "^2.0.6"
pyjwt = "^2.7.0"
sentry-sdk = "^1.23.0"
psycopg2-binary = "^2.9.6"
prometheus-client = "^0.16.0"
gunicorn = "^20.1.0"
azure-keyvault-secrets = "^4.7.0"
azure-identity = "^1.13.0"
python-decouple = "^3.8"
loguru = "^0.7.0"
bink-logging-utils = {version = "^1.3.0", source = "bink-pypi", extras = ["gunicorn"]}

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.267"
pytest = "^7.3.1"
pyfakefs = "^5.2.2"
isort = "^5.12.0"
black = "^23.3.0"
pytest-cov = "^4.0.0"
xenon = "^0.9.0"
pytest-xdist = "^3.3.0"
httpretty = "^1.0.5, !=1.1.0, !=1.1.1, !=1.1.2, !=1.1.3, !=1.1.4"
flask-testing = "^0.8.1"
typer = "^0.9.0"
ipython = "^8.13.2"
refurb = "^1.16.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
line-length = 120
show-source = true
target-version = "py311"
select = [
    "F",    # Pyflakes (F)
    "E",
    "W",    # pycodestyle (E, W)
    "C90",  # mccabe (C90)
    # isort (I)
    # pydocstyle (D)
    "UP",   # pyupgrade (UP)
    "N",    # pep8-naming (N)
    "YTT",  # flake8-2020 (YTT)
    # "ANN",  # flake8-annotations (ANN)
    # "S",    # flake8-bandit (S)
    "BLE",  # flake8-blind-except (BLE)
    # flake8-boolean-trap (FBT)
    "B",    # flake8-bugbear (B)
    "A",    # flake8-builtins (A)
    "C4",   # flake8-comprehensions (C4)
    "T10",  # flake8-debugger (T10)
    # flake8-errmsg (EM)
    "ICN",  # flake8-import-conventions (ICN)
    "T20",  # flake8-print (T20)
    # "PT",   # flake8-pytest-style (PT)
    "Q",    # flake8-quotes (Q)
    # flake8-return (RET)
    "SIM",  # flake8-simplify (SIM)
    "TID",  # flake8-tidy-imports (TID)
    "ARG",  # flake8-unused-arguments (ARG)
    "DTZ",  # flake8-datetimez (DTZ)
    "ERA",  # eradicate (ERA) until we can remove commented out code this has to stay deactivated
    # pandas-vet (PD)
    # pygrep-hooks (PGH)
    "PLC",
    "PLE",
    "PLR",
    "PLW",  # Pylint (PLC, PLE, PLR, PLW)
    "RUF",  # Ruff-specific rules (RUF)
]

ignore = [
    "BLE001",
    "PLR2004",
    "DTZ005", # FIXME: all the datetimes in this project are datetime.now() with no tz specified is this correct?
    "N818",
    "PLR0915" # Too many statements
]

[tool.ruff.per-file-ignores]
"tests/*" = ["T201", "PLR0913"]
"metis/prometheus/*" = ["T201"]
"metis/card_router.py" = ["PLR0915"]
