stages:
  - tests
  - build
  - tagging

tests:
  stage: tests
  image: olympus.azurecr.io/python:3.6
  script:
    - pipenv install --system --deploy --dev --ignore-pipfile
    - export PONTUS_DATABASE="${POSTGRES_NAME}"
    - export PONTUS_USER="postgres"
    - export PONTUS_PASSWORD=""
    - export PONTUS_HOST="${POSTGRES_PORT_5432_TCP_ADDR}"
    - export PONTUS_PORT="5432"
    - pytest app/tests/unit --cov=app
  services:
    - postgres:9.4.4

complexity:
  stage: tests
  image: olympus.azurecr.io/python:3.6
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

flake8:
  stage: tests
  image: olympus.azurecr.io/python:3.6
  script:
    - flake8 *

build-develop:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/metis:latest" .
    - docker push "$CI_REGISTRY/metis:latest"
  only:
    - develop

tag-develop:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: dev
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/metis:latest" --tag "develop-$CI_COMMIT_SHORT_SHA"
  only:
    - develop

build-preprod:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/metis:preprod-$CI_COMMIT_SHORT_SHA" .
    - docker push "$CI_REGISTRY/metis:preprod-$CI_COMMIT_SHORT_SHA"
  only:
    - VOP_develop

build-master:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/metis:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY/metis:$CI_COMMIT_TAG"
  only:
    - tags

tag-staging:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: staging
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/metis:$CI_COMMIT_TAG" --tag "staging-$CI_COMMIT_TAG"
  only:
    - tags

tag-prod:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/metis:$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags
